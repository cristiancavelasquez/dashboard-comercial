// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id             String         @id @default(cuid())
  name           String?
  email          String?        @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  accounts       Account[]
  sessions       Session[]
  Laboratorios   Laboratorios[]
}

model Laboratorios {
  id        String   @id @default(cuid())
  name      String
  updatedAt DateTime @updatedAt
  geo360    Boolean  @default(false)
  geoPx     Boolean  @default(false)
  TD        Boolean  @default(false)
  RM        Boolean  @default(false)
  kam       User     @relation(fields: [kamId], references: [id])
  kamId     String
  tipo      Tipo     @default(Demo)
  status    Status   @default(Pendiente)

  //@@index([kamId], name: "kamId")
}

enum Tipo {
  Recurrente
  Demo
}

enum Status {
  Pendiente
  QVF
  Publicado
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
